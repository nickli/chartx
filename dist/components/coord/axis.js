"use strict";!function(e,t){if("function"==typeof define&&define.amd)define(["exports","mmvis"],t);else if("undefined"!=typeof exports)t(exports,require("mmvis"));else{var i={};t(i,e.mmvis),e.undefined=i}}(void 0,function(e,n){function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e){return(o=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function l(e,t){for(var i=0;i<t.length;i++){var l=t[i];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}function t(e,t,i){return t&&l(e.prototype,t),i&&l(e,i),e}function i(e,t){return(i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var r=(function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&i(e,t)}(u,n.axis),t(u,null,[{key:"defaultProps",value:function(){return{field:{detail:"轴字段配置",documentation:"目前x轴的field只支持单维度设置，也就是说只支持一条x轴",default:[]},layoutType:{detail:"布局方式",default:"rule"},width:{detail:"轴宽",default:0},height:{detail:"轴高",default:0},enabled:{detail:"是否显示轴",default:!0},animation:{detail:"是否开启动画",default:!0},title:{detail:"轴名称",propertys:{shapeType:"text",textAlign:{detail:"水平对齐方式",default:"center"},textBaseline:{detail:"基线对齐方式",default:"middle"},strokeStyle:{detail:"文本描边颜色",default:null},lineHeight:{detail:"行高",default:0},text:{detail:"轴名称的内容",default:""},fontColor:{detail:"颜色",default:"#999"},fontSize:{detail:"字体大小",default:12}}},tickLine:{detail:"刻度线",propertys:{enabled:{detail:"是否开启",default:!0},lineWidth:{detail:"刻度线宽",default:1},lineLength:{detail:"刻度线长度",default:4},distance:{detail:"和前面一个元素的距离",default:2},strokeStyle:{detail:"描边颜色",default:"#cccccc"}}},axisLine:{detail:"轴线配置",propertys:{enabled:{detail:"是否有轴线",default:!0},position:{detail:"轴线的位置",documentation:'default在align的位置（left，right），可选 "center" 和 具体的值',default:"default"},lineWidth:{detail:"轴线宽度",default:1},strokeStyle:{detail:"轴线的颜色",default:"#cccccc"}}},label:{detail:"刻度文本",propertys:{enabled:{detail:"是否显示刻度文本",default:!0},fontColor:{detail:"文本颜色",default:"#999"},fontSize:{detail:"字体大小",default:12},rotation:{detail:"旋转角度",default:0},format:{detail:"label文本的格式化处理函数",default:null},distance:{detail:"和轴线之间的间距",default:2},textAlign:{detail:"水平方向对齐方式",default:"center"},lineHeight:{detail:"文本的行高",default:1},evade:{detail:"是否开启逃避算法,目前的逃避只是隐藏",default:!0}}},filter:{detail:"过滤函数",documentation:"可以用来过滤哪些yaxis 的 节点是否显示已经颜色之类的",default:null},trimLayout:{detail:"自定义的显示规则函数",documentation:"如果用户有手动的 trimLayout ，那么就全部visible为true，然后调用用户自己的过滤程序",default:null}}}}]),t(u,[{key:"drawWaterLine",value:function(e){"proportion"==this.layoutType&&e>=this._min&&e<=this._max||(this.dataSection=[],this.setWaterLine(e),this._initHandle(),this.draw())}}]),u);function u(e,t,i){var l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),l=function(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?d(e):t}(this,o(u).call(this,e,t)),n._.extend(!0,d(l),(0,n.getDefaultProps)(u.defaultProps())),l}e.default=r});