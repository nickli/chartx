define("chartx/utils/projection/normal",[],function(){function a(a,c){return c=c||{},a.srcSize||b(a,c),a.srcSize}function b(a,b){b=b||{},g.xmin=360,g.xmax=-360,g.ymin=180,g.ymax=-180;for(var c,d,e=a.features,f=0,h=e.length;h>f;f++)if(d=e[f],!d.properties.name||!b[d.properties.name])switch(d.type){case"Feature":g[d.geometry.type](d.geometry.coordinates);break;case"GeometryCollection":c=d.geometries;for(var i=0,j=c.length;j>i;i++)g[c[i].type](c[i].coordinates)}return a.srcSize={left:1*g.xmin.toFixed(4),top:1*g.ymin.toFixed(4),width:1*(g.xmax-g.xmin).toFixed(4),height:1*(g.ymax-g.ymin).toFixed(4)},a}function c(a,c,d){function e(a,b){p=a.type,q=a.coordinates,f._bbox={xmin:360,xmax:-360,ymin:180,ymax:-180},r=f[p](q),k.push({path:r,cp:b.properties.cp?f.makePoint(b.properties.cp):f.makePoint([(f._bbox.xmin+f._bbox.xmax)/2,(f._bbox.ymin+f._bbox.ymax)/2]),properties:b.properties,id:b.id})}d=d||{},f.scale=null,f.offset=null,a.srcSize||b(a,d),c.offset={x:a.srcSize.left,y:a.srcSize.top,left:c.OffsetLeft||0,top:c.OffsetTop||0},f.scale=c.scale,f.offset=c.offset;for(var g,h,i,j=a.features,k=[],l=0,m=j.length;m>l;l++)if(i=j[l],!i.properties.name||!d[i.properties.name])if("Feature"==i.type)e(i.geometry,i);else if("GeometryCollection"==i.type){g=i.geometries;for(var n=0,o=g.length;o>n;n++)h=g[n],e(h,h)}var p,q,r;return k}function d(a,b){var c,d;return b instanceof Array?(c=1*b[0],d=1*b[1]):(c=1*b.x,d=1*b.y),c=c/a.scale.x+a.offset.x-168.5,c=c>180?c-360:c,d=90-(d/a.scale.y+a.offset.y),[c,d]}function e(a,b){return f.offset=a.offset,f.scale=a.scale,b instanceof Array?f.makePoint([1*b[0],1*b[1]]):f.makePoint([1*b.x,1*b.y])}var f={formatPoint:function(a){return[(a[0]<-168.5&&a[1]>63.8?a[0]+360:a[0])+168.5,90-a[1]]},makePoint:function(a){var b=this,c=b.formatPoint(a);b._bbox.xmin>a[0]&&(b._bbox.xmin=a[0]),b._bbox.xmax<a[0]&&(b._bbox.xmax=a[0]),b._bbox.ymin>a[1]&&(b._bbox.ymin=a[1]),b._bbox.ymax<a[1]&&(b._bbox.ymax=a[1]);var d=(c[0]-f.offset.x)*f.scale.x+f.offset.left,e=(c[1]-f.offset.y)*f.scale.y+f.offset.top;return[d,e]},Point:function(a){return a=this.makePoint(a),a.join(",")},LineString:function(a){for(var b,c="",d=0,e=a.length;e>d;d++)b=f.makePoint(a[d]),c=0===d?"M"+b.join(","):c+"L"+b.join(",");return c},Polygon:function(a){for(var b="",c=0,d=a.length;d>c;c++)b=b+f.LineString(a[c])+"z";return b},MultiPoint:function(a){for(var b=[],c=0,d=a.length;d>c;c++)b.push(f.Point(a[c]));return b},MultiLineString:function(a){for(var b="",c=0,d=a.length;d>c;c++)b+=f.LineString(a[c]);return b},MultiPolygon:function(a){for(var b="",c=0,d=a.length;d>c;c++)b+=f.Polygon(a[c]);return b}},g={formatPoint:f.formatPoint,makePoint:function(a){var b=this,c=b.formatPoint(a),d=c[0],e=c[1];b.xmin>d&&(b.xmin=d),b.xmax<d&&(b.xmax=d),b.ymin>e&&(b.ymin=e),b.ymax<e&&(b.ymax=e)},Point:function(a){this.makePoint(a)},LineString:function(a){for(var b=0,c=a.length;c>b;b++)this.makePoint(a[b])},Polygon:function(a){for(var b=0,c=a.length;c>b;b++)this.LineString(a[b])},MultiPoint:function(a){for(var b=0,c=a.length;c>b;b++)this.Point(a[b])},MultiLineString:function(a){for(var b=0,c=a.length;c>b;b++)this.LineString(a[b])},MultiPolygon:function(a){for(var b=0,c=a.length;c>b;b++)this.Polygon(a[b])}};return{getBbox:a,geoJson2Path:c,pos2geo:d,geo2pos:e}});